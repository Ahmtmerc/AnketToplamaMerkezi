// <auto-generated />
using System;
using AnketToplamaMerkezi.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AnketToplamaMerkezi.DAL.Migrations
{
    [DbContext(typeof(SurveyContext))]
    partial class SurveyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AnketToplamaMerkezi.EntityLayer.Concrete.FootballSurveyAnswers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FavoriteTeam")
                        .HasColumnType("int");

                    b.Property<DateTime>("PersonBirhDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PersonGender")
                        .HasColumnType("int");

                    b.Property<string>("PersonName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonSurname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SurveyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SurveyId");

                    b.ToTable("FootballSurveyAnswers");
                });

            modelBuilder.Entity("AnketToplamaMerkezi.EntityLayer.Concrete.HappinessSurveyAnswers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisappointingThing")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HappiestThing")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HappynessRate")
                        .HasColumnType("int");

                    b.Property<DateTime>("PersonBirhDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PersonGender")
                        .HasColumnType("int");

                    b.Property<string>("PersonName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonSurname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SurveyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SurveyId");

                    b.ToTable("HappinessSurveyAnswers");
                });

            modelBuilder.Entity("AnketToplamaMerkezi.EntityLayer.Concrete.PollsterInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("PollsterName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PollsterSurname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PollsterInformation");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PollsterName = "John",
                            PollsterSurname = "Doe"
                        },
                        new
                        {
                            Id = 2,
                            PollsterName = "Jane",
                            PollsterSurname = "Doe"
                        });
                });

            modelBuilder.Entity("AnketToplamaMerkezi.EntityLayer.Concrete.SavedSurveys", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("SurveyAnswersId")
                        .HasColumnType("int");

                    b.Property<int>("SurveyInformationId")
                        .HasColumnType("int");

                    b.Property<int>("SurveyType")
                        .HasColumnType("int");

                    b.Property<DateTime>("SystemDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("SavedSurveys");
                });

            modelBuilder.Entity("AnketToplamaMerkezi.EntityLayer.Concrete.SurveyInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PollsterId")
                        .HasColumnType("int");

                    b.Property<string>("SurveyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SurveyType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PollsterId");

                    b.ToTable("SurveyInformations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PollsterId = 1,
                            SurveyName = "Tuttuğunuz Futbol Takımı",
                            SurveyType = 1
                        },
                        new
                        {
                            Id = 2,
                            PollsterId = 2,
                            SurveyName = "Hayatınızdan Memnunmusunuz",
                            SurveyType = 2
                        });
                });

            modelBuilder.Entity("AnketToplamaMerkezi.EntityLayer.Concrete.FootballSurveyAnswers", b =>
                {
                    b.HasOne("AnketToplamaMerkezi.EntityLayer.Concrete.SurveyInformation", "Survey")
                        .WithMany()
                        .HasForeignKey("SurveyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Survey");
                });

            modelBuilder.Entity("AnketToplamaMerkezi.EntityLayer.Concrete.HappinessSurveyAnswers", b =>
                {
                    b.HasOne("AnketToplamaMerkezi.EntityLayer.Concrete.SurveyInformation", "Survey")
                        .WithMany()
                        .HasForeignKey("SurveyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Survey");
                });

            modelBuilder.Entity("AnketToplamaMerkezi.EntityLayer.Concrete.SurveyInformation", b =>
                {
                    b.HasOne("AnketToplamaMerkezi.EntityLayer.Concrete.PollsterInformation", "Pollster")
                        .WithMany("Surveys")
                        .HasForeignKey("PollsterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pollster");
                });

            modelBuilder.Entity("AnketToplamaMerkezi.EntityLayer.Concrete.PollsterInformation", b =>
                {
                    b.Navigation("Surveys");
                });
#pragma warning restore 612, 618
        }
    }
}
